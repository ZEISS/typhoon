apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: redisbrokers.eventing.typhoon.zeiss.com
  labels:
    typhoon.zeiss.com/crd-install: 'true'
spec:
  group: eventing.typhoon.zeiss.com
  scope: Namespaced
  names:
    kind: RedisBroker
    listKind: RedisBrokerList
    plural: redisbrokers
    singular: redisbroker
    categories:
    - all
    - typhoon
    - brokers

  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: RedisBroker is the Schema for the redisbrokers API
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisBrokerSpec defines the desired state of RedisBroker
            type: object
            properties:
              redis:
                description: Redis options.
                type: object
                properties:
                  connection:
                    description: Redis connection.
                    type: object
                    properties:
                      url:
                        description: URL of the Redis standalone instance.
                        type: string
                      clusterURLs:
                        description: URLs for the Redis cluster instances.
                        type: array
                        items:
                          type: string
                      username:
                        description: Redis username.
                        type: object
                        properties:
                          secretKeyRef:
                            description: A reference to a Kubernetes Secret object.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                      password:
                        description: Redis password.
                        type: object
                        properties:
                          secretKeyRef:
                            description: A reference to a Kubernetes Secret object.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                      tlsCACertificate:
                        description: Contains a CA certificate used to connect to Redis.
                        type: object
                        properties:
                          secretKeyRef:
                            description: A reference to a Kubernetes Secret object.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                      tlsCertificate:
                        description: Contains a certificate used to connect to authenticate to Redis.
                        type: object
                        properties:
                          secretKeyRef:
                            description: A reference to a Kubernetes Secret object.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string
                      tlsKey:
                        description: Contains a key certificate used to connect to authenticate to Redis.
                        type: object
                        properties:
                          secretKeyRef:
                            description: A reference to a Kubernetes Secret object.
                            type: object
                            properties:
                              name:
                                type: string
                              key:
                                type: string

                      tlsEnabled:
                        description: Use TLS enctrypted Redis connection.
                        type: boolean
                      tlsSkipVerify:
                        description: Skip TLS certificate verification. If caCertificate is set, tlsSkipVerify will default to false.
                        type: boolean
                    oneOf:
                    - required: [url]
                    - required: [clusterURLs]

                  stream:
                    description: Redis stream to be used by the broker.
                    type: string
                  streamMaxLen:
                    description: Maximum number of items (approximate) the Redis stream can host.
                    type: integer
                    default: 1000
                  enableTrackingID:
                    description: Whether the Redis ID for the event is added as a CloudEvents attribute. Defaults to false
                    type: boolean
              broker:
                description: Broker options.
                type: object
                properties:
                  port:
                    description: Broker HTTP port.
                    type: integer
                  observability:
                    description: Observability parameters for the Broker.
                    type: object
                    properties:
                      valueFromConfigMap:
                        description: ConfigMap that contains the observability parameters.
                        type: string
                    required:
                    - valueFromConfigMap

          status:
            description: Status represents the current state of the Broker. This data may be out of date.
            type: object
            properties:
              address:
                description: Broker is Addressable. It exposes the endpoint as an URI to get events delivered into the Broker mesh.
                type: object
                properties:
                  url:
                    type: string
              conditions:
                description: Conditions the latest available observations of a resource's current state.
                type: array
                items:
                  type: object
                  required:
                    - type
                    - status
                  properties:
                    lastTransitionTime:
                      description: 'LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).'
                      type: string
                    message:
                      description: 'A human readable message indicating details about the transition.'
                      type: string
                    reason:
                      description: 'The reason for the condition''s last transition.'
                      type: string
                    severity:
                      description: 'Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.'
                      type: string
                    status:
                      description: 'Status of the condition, one of True, False, Unknown.'
                      type: string
                    type:
                      description: 'Type of condition.'
                      type: string
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                type: integer
                format: int64
    additionalPrinterColumns:
    - name: URL
      type: string
      jsonPath: .status.address.url
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason