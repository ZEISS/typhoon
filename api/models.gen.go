// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes     = "api_key.Scopes"
	BearerAuthScopes  = "bearerAuth.Scopes"
	Bearer_authScopes = "bearer_auth.Scopes"
)

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// System defines model for System.
type System struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`

	// Name Name of the system
	Name string `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListTeamParams defines parameters for ListTeam.
type ListTeamParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYUa/TuBL+K5G5D/dKaZMedCWU+1S4LOougiNasdKW6shNpq0hsYM9oSc66n9fjR0n",
	"aZoC0sKyK+1L1dgZz8w3882M88BSVZRKgkTDkgdWcs0LQND2KReFwFtaoqcMTKpFiUJJlrDVAQJZFVvQ",
	"JlC7QCAUJkAVaMBKyykLmaDXPlagaxYyyQtgiTuRhcykByi4O3XHqxxZchOHrOD3oqgKlvyXHoR0D7OQ",
	"YV2SuJAIe9DsdAqZ2u0MfNm6M+PMB1EGW9gpDYFBrlHIPa2nKs8hxQAPEGgwVY6BAbzmhNM87kXf7njE",
	"7lPINHyswOBTlQmwMD/TwBFW4BxJlUSQSH95WeYi5eRT9N6QYw89nf/SsGMJexR1IYzcronsYaeT1des",
	"kcgt3wvJEbI31kkbca1K0NiY4uKTPHjDHYashXt0yyFmentca17TFirk+YjQqYVGbd9DivTusjYIxaVN",
	"qYUnm+NlmC1yQskg4wgBl1mAogAWMrjnRZnT+TfxzWwSzyaP41X8JHkcJ3H8GwvZTumCI0sYSU4aqcYk",
	"g1rIPZmUQQ4/THVP21D5POg9U4ZT4hqL33TsMJHRGa3iqhIZo7jx7LXMa5agrmAoFrL7ieKlmKQqgz3I",
	"Cdyj5hPkexuVvdIFS6xMQuf9r6FAsgd5p7nMVHFH6//+j422o87Qj1e8gHPzzwCEanIEg5PZmE9Vmf2Y",
	"tGgoLDRkLFk7zzZX89mCJfyfz3G2yf+TLYMLJzGLuyLSkspXigFNlESe4vOCiz7jOsD+4dEYKn8davz9",
	"MvwtaNPgep6LdPaoS586ic/r9C+G7qxL7dTYIK20wHpJBHKKeSnuPkBtOUc4HYBnoLvW7fc7UpXiF7Cs",
	"2gLXoOcVHkjaPf3kwfr515Xv9yTldrtTDoila+6pkqayxqwv2/eG0nEnpKAl03XzXpsjbr8BUypp4BJX",
	"l6wXqF7JoMsmS0tC7tRlQj0KFhK1yqqUFt7Jd5JGqFVdHpSSwfx2EfA8V0cT1KqiienVfLWcCvWOIpSL",
	"FBpzG5jnJU8PENxMYxaySucNRCaJouPxOOV2e6r0PmpkTfRy8ez5q+Xzyc00nh6wyO30INCmcs8M1ssh",
	"NpvG09gOJyVIXgqWsMfTmVVacjxYyCLTleE9jFDpjR1YTcCDXBikblRwyfeQNR3JUEelINhALjKWsJfC",
	"oK/udvyx4bIqbuL4mw1xXoUN23AAKP0oF3j9ZDrPc2+2o0hVFFzXjc12e8Q7V7jWfgLbkKTHLXpwfxbZ",
	"6VtCuDyo49J3/P6tYz02yovsfEpoLhpawCfwQzpFvCO6N5r1y4qr5R34Q75sxoP550FvGuwReBE90O85",
	"7C2GLKElOwgMkX3h1ldW+BLcEazQv3odqWF//ErkvuldZsiBZZWmYMyuygd4vwCkXCS3gm0dLP7PWlDN",
	"GJgtpxs8B4iN2da9EvXvoafwi6/37tSEWmlr7vV+8YdQ5Xn+enfVB4/v8FJITpy3nd4F76smWRex4eB6",
	"2Y42n41q3tLrrNtbf/rNem2ntcSFd0OgjlDP7XZ8syZuTiErlUF385UfrGMNf57Wi+wySzrSnX8paSiU",
	"ECzO5ulWZfWjSGQudc+P6d34vyYF/PeC+hrwZ58Uot7pp4sMmn13Xjr12YCUbpV4KeFow3EZDWJpb0Ic",
	"5enbdjD8bgXHq/DfT1offJ+jRpRWWoPEoLHX96f57eKsrIP+BJq5RP9SoI2fY9duoNyMJv0dd1m/IZ62",
	"8+7aJb5V58pWN3YlUZSrlOcHZTB5Ej+JbeVpTBxptwYCrsG604x5AR442kXfwra1Hw6nXSNpb7DtINgk",
	"Yfvc4HHanH4PAAD//x6dYEp6FAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
