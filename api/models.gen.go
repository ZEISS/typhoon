// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes     = "api_key.Scopes"
	Bearer_authScopes = "bearer_auth.Scopes"
)

// System defines model for System.
type System struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8RXW2/bNhT+KwS7hw2QLSV9KbQnt+sKb0VX1EYHzDUCRjy22EqkRlJ1hED/fTi8SL5m",
	"AZaueQhkXs7lO9/5dHRPC1U3SoK0hub3VMPfLRj7UnEBbuGVBmZhCazGX4WSFqTFR9Y0lSiYFUqmn42S",
	"uGaKEmqGTz9o2NCcPktH86nfNakz1uNfEm44T4vOWHBeGq0a0DZEIDj+t10DNKfGaiG3tE+oZDWc2egT",
	"l4PQwGm+wsvh6DqJR9XtZygs2vAuvZf48FDkIcQ+oTW7m/sbV1k2WGZasw63I16HmSB6rLCvayaqszkV",
	"Dmw+cwBzMIUWDQJMc18HoSThzAJhkhMraqAJhTtWNxXauc6urybZ1eR5tsxe5M+zPMv+ogndKF0zS3OK",
	"Nyfh1olrDhV8N9d73s6g4gkw2GpbV1QNjP8hq47mVrdwbDahdxPFGjEpFIctyAncWc0mlm1dJbZK1zR3",
	"d3K09zOHDWsrm29B3mgmuapvcP3HnxyjLnAtoW3Dv0/Bjmh+keEfQZuA6yEX0fbZlL6ONx72GQ8m3tap",
	"d2xvKFotbLfABvKOWSNuvkDneg5xKoFx0LFL82F/bKpG/A6uq26BadCz1pZ42//6NYL1259LGvQEb/nd",
	"0UppbUOd5BRKmtYFszoVsTXScSOkwCUzaprv30ELP4BplDTwBGp1DBoSXm7UKaGekbm0WvG2wIVP8pNc",
	"lkCWXVMqJcns/ZywqlI7QzrVEqvIu9lyMRXqE1aoEgWEcAPMs4YVJZDraUYT2uoqQGTyNN3tdlPmtqdK",
	"b9Nw16Rv569ev1u8nlxPs2lp6wrzssI6Ku+FQfc4RK+m2TTDg6oByRpBc/rcLSW0YbZ0kKVmlOEtnGml",
	"D2BbLQ1hpBLGErUhNZNsC5yEm1PqHGhXyDmnOX0rjI3qjrT15XIurrPsyV5l0YUr22HQM9KwrZAoDyT6",
	"x9BZVcWwfYu0dc10F2J222ey88K1ii/JNd6MuKX3/mHO+6eEcFGqXXCHxdKsBgsaozg2jjwUHI3aEoJB",
	"ZKAGqwV8RflyrY4VHxs9Bk33ZcVr+Qj+cb+szxfz/4PeBOwtsDq9x/+HsA8Y0hyX3CBwjOwbv750l0/B",
	"PYOVjUcvI3X8fnwkck860R33wKItCjBm01ZHeL8Bi1zEtMhtR+a/0AFUcw7MoacDno3Twcsa/p8yfdQo",
	"6FM+nvwegqAauHiJfD79kXHOx7pPaKOMi7sS8ouLLDDoZTfnpziNtNsn1n0kUY55+UCmt4p3z1LBfeSH",
	"ZvYm/8cAHr8bukvIHXxapHvW+5N6XX1zZnr3/KgSfhWZKWHnynFaDeTp3ox0lqkfh9Hom7VcdBG/o4Yc",
	"otKjFBet1iAtCfFGhZ69nx8IG+ivoDG1/t8LbeIkt/Ij1Xoc8px4+bnrhrkhbbXuk72Jb7Xu3XF056Vu",
	"HDzyNK1UwapSGZu/yF5kFM+GEM+8cAwQpsGlEwYdYktm3WIU8dsujkfTUUqHb7hhFAokHH4HPPp1/08A",
	"AAD//0TKa2QeDwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
