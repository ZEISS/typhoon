openapi: 3.0.0

info:
  version: 1.0.0
  title: Typhoon API
  description: |
    # Introduction

    The Typhoon API allows you to NATS.io
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: https://example.io/v1

tags:
  - name: System
    description: |-
      These are the NATS.io that are managed by Typhoon.
  - name: Team
  - name: Server

consumes:
  - "application/json"
produces:
  - "application/json"
schemes:
#- "https"
- "http"

paths:
  /version:
    get:
      summary: Returns the current version of the API.
      operationId: version
      tags:
        - Server
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Version"

  /teams:
    post:
      summary: Creates a new team
      operationId: createTeam
      tag:
        - Team
      produces:
        - "application/json"
      requestBody:
        $ref: '#/components/requestBodies/CreateTeam'
      responses:
        '200':
          description: Returns the created team
          application/json:
            schema:
              $ref: "#/components/schemas/Team"

  /systems:
    get:
      summary: List all managed systems.
      operationId: listSystems
      tags:
        - System
      description: |-
        Returns a list of managed systems.
      responses:
        '200':
          description: A paginated response of all systems
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Systems"

  /systems/{systemId}:
    get:
      summary: List all managed systems.
      operationId: showSystem
      tags:
        - Systems
      description: |-
        Returns a list of managed systems.
      parameters:
        - name: systemId
          in: path
          required: true
          description: The id of the system to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A paginated response of all systems

definitions:
  schemas:
    createTeamResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

components:
  requestBodies:
    CreateTeam:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Team'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    api_key:
      in: header
      name: api_key
      type: apiKey

  schemas:
    Team:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          x-oapi-codegen-extra-tags: 
            gorm: "type:uuid;default:gen_random_uuid()"
        name:
          type: string
    Version:
      type: object
      required:
        - version
        - date
      properties:
        version:
          type: string
        date:
          type: string
    System:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    Systems:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/System"

security:
  - bearer_auth: []
  - api_key: []
