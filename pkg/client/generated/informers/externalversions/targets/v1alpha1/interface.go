// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/zeiss/typhoon/pkg/client/generated/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// CloudEventsTargets returns a CloudEventsTargetInformer.
	CloudEventsTargets() CloudEventsTargetInformer
	// DatadogTargets returns a DatadogTargetInformer.
	DatadogTargets() DatadogTargetInformer
	// HTTPTargets returns a HTTPTargetInformer.
	HTTPTargets() HTTPTargetInformer
	// KafkaTargets returns a KafkaTargetInformer.
	KafkaTargets() KafkaTargetInformer
	// LogzMetricsTargets returns a LogzMetricsTargetInformer.
	LogzMetricsTargets() LogzMetricsTargetInformer
	// LogzTargets returns a LogzTargetInformer.
	LogzTargets() LogzTargetInformer
	// OracleTargets returns a OracleTargetInformer.
	OracleTargets() OracleTargetInformer
	// SplunkTargets returns a SplunkTargetInformer.
	SplunkTargets() SplunkTargetInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// CloudEventsTargets returns a CloudEventsTargetInformer.
func (v *version) CloudEventsTargets() CloudEventsTargetInformer {
	return &cloudEventsTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DatadogTargets returns a DatadogTargetInformer.
func (v *version) DatadogTargets() DatadogTargetInformer {
	return &datadogTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// HTTPTargets returns a HTTPTargetInformer.
func (v *version) HTTPTargets() HTTPTargetInformer {
	return &hTTPTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// KafkaTargets returns a KafkaTargetInformer.
func (v *version) KafkaTargets() KafkaTargetInformer {
	return &kafkaTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LogzMetricsTargets returns a LogzMetricsTargetInformer.
func (v *version) LogzMetricsTargets() LogzMetricsTargetInformer {
	return &logzMetricsTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// LogzTargets returns a LogzTargetInformer.
func (v *version) LogzTargets() LogzTargetInformer {
	return &logzTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// OracleTargets returns a OracleTargetInformer.
func (v *version) OracleTargets() OracleTargetInformer {
	return &oracleTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SplunkTargets returns a SplunkTargetInformer.
func (v *version) SplunkTargets() SplunkTargetInformer {
	return &splunkTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
