// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/sources/v1alpha1"
	sourcesv1alpha1 "github.com/zeiss/typhoon/pkg/client/generated/clientset/internalclientset/typed/sources/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeHTTPPollerSources implements HTTPPollerSourceInterface
type fakeHTTPPollerSources struct {
	*gentype.FakeClientWithList[*v1alpha1.HTTPPollerSource, *v1alpha1.HTTPPollerSourceList]
	Fake *FakeSourcesV1alpha1
}

func newFakeHTTPPollerSources(fake *FakeSourcesV1alpha1, namespace string) sourcesv1alpha1.HTTPPollerSourceInterface {
	return &fakeHTTPPollerSources{
		gentype.NewFakeClientWithList[*v1alpha1.HTTPPollerSource, *v1alpha1.HTTPPollerSourceList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("httppollersources"),
			v1alpha1.SchemeGroupVersion.WithKind("HTTPPollerSource"),
			func() *v1alpha1.HTTPPollerSource { return &v1alpha1.HTTPPollerSource{} },
			func() *v1alpha1.HTTPPollerSourceList { return &v1alpha1.HTTPPollerSourceList{} },
			func(dst, src *v1alpha1.HTTPPollerSourceList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.HTTPPollerSourceList) []*v1alpha1.HTTPPollerSource {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.HTTPPollerSourceList, items []*v1alpha1.HTTPPollerSource) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
