// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/flow/v1alpha1"
	flowv1alpha1 "github.com/zeiss/typhoon/pkg/client/generated/clientset/internalclientset/typed/flow/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSynchronizers implements SynchronizerInterface
type fakeSynchronizers struct {
	*gentype.FakeClientWithList[*v1alpha1.Synchronizer, *v1alpha1.SynchronizerList]
	Fake *FakeFlowV1alpha1
}

func newFakeSynchronizers(fake *FakeFlowV1alpha1, namespace string) flowv1alpha1.SynchronizerInterface {
	return &fakeSynchronizers{
		gentype.NewFakeClientWithList[*v1alpha1.Synchronizer, *v1alpha1.SynchronizerList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("synchronizers"),
			v1alpha1.SchemeGroupVersion.WithKind("Synchronizer"),
			func() *v1alpha1.Synchronizer { return &v1alpha1.Synchronizer{} },
			func() *v1alpha1.SynchronizerList { return &v1alpha1.SynchronizerList{} },
			func(dst, src *v1alpha1.SynchronizerList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.SynchronizerList) []*v1alpha1.Synchronizer {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.SynchronizerList, items []*v1alpha1.Synchronizer) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
