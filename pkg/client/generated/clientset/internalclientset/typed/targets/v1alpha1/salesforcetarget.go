// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	targetsv1alpha1 "github.com/zeiss/typhoon/pkg/apis/targets/v1alpha1"
	scheme "github.com/zeiss/typhoon/pkg/client/generated/clientset/internalclientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// SalesforceTargetsGetter has a method to return a SalesforceTargetInterface.
// A group's client should implement this interface.
type SalesforceTargetsGetter interface {
	SalesforceTargets(namespace string) SalesforceTargetInterface
}

// SalesforceTargetInterface has methods to work with SalesforceTarget resources.
type SalesforceTargetInterface interface {
	Create(ctx context.Context, salesforceTarget *targetsv1alpha1.SalesforceTarget, opts v1.CreateOptions) (*targetsv1alpha1.SalesforceTarget, error)
	Update(ctx context.Context, salesforceTarget *targetsv1alpha1.SalesforceTarget, opts v1.UpdateOptions) (*targetsv1alpha1.SalesforceTarget, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, salesforceTarget *targetsv1alpha1.SalesforceTarget, opts v1.UpdateOptions) (*targetsv1alpha1.SalesforceTarget, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*targetsv1alpha1.SalesforceTarget, error)
	List(ctx context.Context, opts v1.ListOptions) (*targetsv1alpha1.SalesforceTargetList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *targetsv1alpha1.SalesforceTarget, err error)
	SalesforceTargetExpansion
}

// salesforceTargets implements SalesforceTargetInterface
type salesforceTargets struct {
	*gentype.ClientWithList[*targetsv1alpha1.SalesforceTarget, *targetsv1alpha1.SalesforceTargetList]
}

// newSalesforceTargets returns a SalesforceTargets
func newSalesforceTargets(c *TargetsV1alpha1Client, namespace string) *salesforceTargets {
	return &salesforceTargets{
		gentype.NewClientWithList[*targetsv1alpha1.SalesforceTarget, *targetsv1alpha1.SalesforceTargetList](
			"salesforcetargets",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *targetsv1alpha1.SalesforceTarget { return &targetsv1alpha1.SalesforceTarget{} },
			func() *targetsv1alpha1.SalesforceTargetList { return &targetsv1alpha1.SalesforceTargetList{} },
		),
	}
}
