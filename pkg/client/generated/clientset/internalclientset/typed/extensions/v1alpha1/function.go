// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	extensionsv1alpha1 "github.com/zeiss/typhoon/pkg/apis/extensions/v1alpha1"
	scheme "github.com/zeiss/typhoon/pkg/client/generated/clientset/internalclientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// FunctionsGetter has a method to return a FunctionInterface.
// A group's client should implement this interface.
type FunctionsGetter interface {
	Functions(namespace string) FunctionInterface
}

// FunctionInterface has methods to work with Function resources.
type FunctionInterface interface {
	Create(ctx context.Context, function *extensionsv1alpha1.Function, opts v1.CreateOptions) (*extensionsv1alpha1.Function, error)
	Update(ctx context.Context, function *extensionsv1alpha1.Function, opts v1.UpdateOptions) (*extensionsv1alpha1.Function, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, function *extensionsv1alpha1.Function, opts v1.UpdateOptions) (*extensionsv1alpha1.Function, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*extensionsv1alpha1.Function, error)
	List(ctx context.Context, opts v1.ListOptions) (*extensionsv1alpha1.FunctionList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *extensionsv1alpha1.Function, err error)
	FunctionExpansion
}

// functions implements FunctionInterface
type functions struct {
	*gentype.ClientWithList[*extensionsv1alpha1.Function, *extensionsv1alpha1.FunctionList]
}

// newFunctions returns a Functions
func newFunctions(c *ExtensionsV1alpha1Client, namespace string) *functions {
	return &functions{
		gentype.NewClientWithList[*extensionsv1alpha1.Function, *extensionsv1alpha1.FunctionList](
			"functions",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *extensionsv1alpha1.Function { return &extensionsv1alpha1.Function{} },
			func() *extensionsv1alpha1.FunctionList { return &extensionsv1alpha1.FunctionList{} },
		),
	}
}
