// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/extensions/v1alpha1"
	extensionsv1alpha1 "github.com/zeiss/typhoon/pkg/client/generated/clientset/internalclientset/typed/extensions/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeFunctions implements FunctionInterface
type fakeFunctions struct {
	*gentype.FakeClientWithList[*v1alpha1.Function, *v1alpha1.FunctionList]
	Fake *FakeExtensionsV1alpha1
}

func newFakeFunctions(fake *FakeExtensionsV1alpha1, namespace string) extensionsv1alpha1.FunctionInterface {
	return &fakeFunctions{
		gentype.NewFakeClientWithList[*v1alpha1.Function, *v1alpha1.FunctionList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("functions"),
			v1alpha1.SchemeGroupVersion.WithKind("Function"),
			func() *v1alpha1.Function { return &v1alpha1.Function{} },
			func() *v1alpha1.FunctionList { return &v1alpha1.FunctionList{} },
			func(dst, src *v1alpha1.FunctionList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.FunctionList) []*v1alpha1.Function { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.FunctionList, items []*v1alpha1.Function) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
