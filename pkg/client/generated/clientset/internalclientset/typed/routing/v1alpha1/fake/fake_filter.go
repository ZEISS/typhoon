// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/routing/v1alpha1"
	routingv1alpha1 "github.com/zeiss/typhoon/pkg/client/generated/clientset/internalclientset/typed/routing/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeFilters implements FilterInterface
type fakeFilters struct {
	*gentype.FakeClientWithList[*v1alpha1.Filter, *v1alpha1.FilterList]
	Fake *FakeRoutingV1alpha1
}

func newFakeFilters(fake *FakeRoutingV1alpha1, namespace string) routingv1alpha1.FilterInterface {
	return &fakeFilters{
		gentype.NewFakeClientWithList[*v1alpha1.Filter, *v1alpha1.FilterList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("filters"),
			v1alpha1.SchemeGroupVersion.WithKind("Filter"),
			func() *v1alpha1.Filter { return &v1alpha1.Filter{} },
			func() *v1alpha1.FilterList { return &v1alpha1.FilterList{} },
			func(dst, src *v1alpha1.FilterList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.FilterList) []*v1alpha1.Filter { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.FilterList, items []*v1alpha1.Filter) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
