// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/sources/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureServiceBusQueueSourceLister helps list AzureServiceBusQueueSources.
// All objects returned here must be treated as read-only.
type AzureServiceBusQueueSourceLister interface {
	// List lists all AzureServiceBusQueueSources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureServiceBusQueueSource, err error)
	// AzureServiceBusQueueSources returns an object that can list and get AzureServiceBusQueueSources.
	AzureServiceBusQueueSources(namespace string) AzureServiceBusQueueSourceNamespaceLister
	AzureServiceBusQueueSourceListerExpansion
}

// azureServiceBusQueueSourceLister implements the AzureServiceBusQueueSourceLister interface.
type azureServiceBusQueueSourceLister struct {
	indexer cache.Indexer
}

// NewAzureServiceBusQueueSourceLister returns a new AzureServiceBusQueueSourceLister.
func NewAzureServiceBusQueueSourceLister(indexer cache.Indexer) AzureServiceBusQueueSourceLister {
	return &azureServiceBusQueueSourceLister{indexer: indexer}
}

// List lists all AzureServiceBusQueueSources in the indexer.
func (s *azureServiceBusQueueSourceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureServiceBusQueueSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureServiceBusQueueSource))
	})
	return ret, err
}

// AzureServiceBusQueueSources returns an object that can list and get AzureServiceBusQueueSources.
func (s *azureServiceBusQueueSourceLister) AzureServiceBusQueueSources(namespace string) AzureServiceBusQueueSourceNamespaceLister {
	return azureServiceBusQueueSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureServiceBusQueueSourceNamespaceLister helps list and get AzureServiceBusQueueSources.
// All objects returned here must be treated as read-only.
type AzureServiceBusQueueSourceNamespaceLister interface {
	// List lists all AzureServiceBusQueueSources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureServiceBusQueueSource, err error)
	// Get retrieves the AzureServiceBusQueueSource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AzureServiceBusQueueSource, error)
	AzureServiceBusQueueSourceNamespaceListerExpansion
}

// azureServiceBusQueueSourceNamespaceLister implements the AzureServiceBusQueueSourceNamespaceLister
// interface.
type azureServiceBusQueueSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureServiceBusQueueSources in the indexer for a given namespace.
func (s azureServiceBusQueueSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureServiceBusQueueSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureServiceBusQueueSource))
	})
	return ret, err
}

// Get retrieves the AzureServiceBusQueueSource from the indexer for a given namespace and name.
func (s azureServiceBusQueueSourceNamespaceLister) Get(name string) (*v1alpha1.AzureServiceBusQueueSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("azureservicebusqueuesource"), name)
	}
	return obj.(*v1alpha1.AzureServiceBusQueueSource), nil
}
