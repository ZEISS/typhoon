// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/sources/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OCIMetricsSourceLister helps list OCIMetricsSources.
// All objects returned here must be treated as read-only.
type OCIMetricsSourceLister interface {
	// List lists all OCIMetricsSources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OCIMetricsSource, err error)
	// OCIMetricsSources returns an object that can list and get OCIMetricsSources.
	OCIMetricsSources(namespace string) OCIMetricsSourceNamespaceLister
	OCIMetricsSourceListerExpansion
}

// oCIMetricsSourceLister implements the OCIMetricsSourceLister interface.
type oCIMetricsSourceLister struct {
	indexer cache.Indexer
}

// NewOCIMetricsSourceLister returns a new OCIMetricsSourceLister.
func NewOCIMetricsSourceLister(indexer cache.Indexer) OCIMetricsSourceLister {
	return &oCIMetricsSourceLister{indexer: indexer}
}

// List lists all OCIMetricsSources in the indexer.
func (s *oCIMetricsSourceLister) List(selector labels.Selector) (ret []*v1alpha1.OCIMetricsSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OCIMetricsSource))
	})
	return ret, err
}

// OCIMetricsSources returns an object that can list and get OCIMetricsSources.
func (s *oCIMetricsSourceLister) OCIMetricsSources(namespace string) OCIMetricsSourceNamespaceLister {
	return oCIMetricsSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OCIMetricsSourceNamespaceLister helps list and get OCIMetricsSources.
// All objects returned here must be treated as read-only.
type OCIMetricsSourceNamespaceLister interface {
	// List lists all OCIMetricsSources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.OCIMetricsSource, err error)
	// Get retrieves the OCIMetricsSource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.OCIMetricsSource, error)
	OCIMetricsSourceNamespaceListerExpansion
}

// oCIMetricsSourceNamespaceLister implements the OCIMetricsSourceNamespaceLister
// interface.
type oCIMetricsSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OCIMetricsSources in the indexer for a given namespace.
func (s oCIMetricsSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OCIMetricsSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OCIMetricsSource))
	})
	return ret, err
}

// Get retrieves the OCIMetricsSource from the indexer for a given namespace and name.
func (s oCIMetricsSourceNamespaceLister) Get(name string) (*v1alpha1.OCIMetricsSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ocimetricssource"), name)
	}
	return obj.(*v1alpha1.OCIMetricsSource), nil
}
