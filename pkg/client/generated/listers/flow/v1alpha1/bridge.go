// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/flow/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// BridgeLister helps list Bridges.
// All objects returned here must be treated as read-only.
type BridgeLister interface {
	// List lists all Bridges in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Bridge, err error)
	// Bridges returns an object that can list and get Bridges.
	Bridges(namespace string) BridgeNamespaceLister
	BridgeListerExpansion
}

// bridgeLister implements the BridgeLister interface.
type bridgeLister struct {
	listers.ResourceIndexer[*v1alpha1.Bridge]
}

// NewBridgeLister returns a new BridgeLister.
func NewBridgeLister(indexer cache.Indexer) BridgeLister {
	return &bridgeLister{listers.New[*v1alpha1.Bridge](indexer, v1alpha1.Resource("bridge"))}
}

// Bridges returns an object that can list and get Bridges.
func (s *bridgeLister) Bridges(namespace string) BridgeNamespaceLister {
	return bridgeNamespaceLister{listers.NewNamespaced[*v1alpha1.Bridge](s.ResourceIndexer, namespace)}
}

// BridgeNamespaceLister helps list and get Bridges.
// All objects returned here must be treated as read-only.
type BridgeNamespaceLister interface {
	// List lists all Bridges in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Bridge, err error)
	// Get retrieves the Bridge from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Bridge, error)
	BridgeNamespaceListerExpansion
}

// bridgeNamespaceLister implements the BridgeNamespaceLister
// interface.
type bridgeNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Bridge]
}
