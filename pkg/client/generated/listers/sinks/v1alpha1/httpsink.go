// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/sinks/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HTTPSinkLister helps list HTTPSinks.
// All objects returned here must be treated as read-only.
type HTTPSinkLister interface {
	// List lists all HTTPSinks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HTTPSink, err error)
	// HTTPSinks returns an object that can list and get HTTPSinks.
	HTTPSinks(namespace string) HTTPSinkNamespaceLister
	HTTPSinkListerExpansion
}

// hTTPSinkLister implements the HTTPSinkLister interface.
type hTTPSinkLister struct {
	indexer cache.Indexer
}

// NewHTTPSinkLister returns a new HTTPSinkLister.
func NewHTTPSinkLister(indexer cache.Indexer) HTTPSinkLister {
	return &hTTPSinkLister{indexer: indexer}
}

// List lists all HTTPSinks in the indexer.
func (s *hTTPSinkLister) List(selector labels.Selector) (ret []*v1alpha1.HTTPSink, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HTTPSink))
	})
	return ret, err
}

// HTTPSinks returns an object that can list and get HTTPSinks.
func (s *hTTPSinkLister) HTTPSinks(namespace string) HTTPSinkNamespaceLister {
	return hTTPSinkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HTTPSinkNamespaceLister helps list and get HTTPSinks.
// All objects returned here must be treated as read-only.
type HTTPSinkNamespaceLister interface {
	// List lists all HTTPSinks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HTTPSink, err error)
	// Get retrieves the HTTPSink from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HTTPSink, error)
	HTTPSinkNamespaceListerExpansion
}

// hTTPSinkNamespaceLister implements the HTTPSinkNamespaceLister
// interface.
type hTTPSinkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HTTPSinks in the indexer for a given namespace.
func (s hTTPSinkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HTTPSink, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HTTPSink))
	})
	return ret, err
}

// Get retrieves the HTTPSink from the indexer for a given namespace and name.
func (s hTTPSinkNamespaceLister) Get(name string) (*v1alpha1.HTTPSink, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("httpsink"), name)
	}
	return obj.(*v1alpha1.HTTPSink), nil
}
