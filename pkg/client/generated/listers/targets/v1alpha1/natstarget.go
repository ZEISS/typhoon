// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/targets/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NatsTargetLister helps list NatsTargets.
// All objects returned here must be treated as read-only.
type NatsTargetLister interface {
	// List lists all NatsTargets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NatsTarget, err error)
	// NatsTargets returns an object that can list and get NatsTargets.
	NatsTargets(namespace string) NatsTargetNamespaceLister
	NatsTargetListerExpansion
}

// natsTargetLister implements the NatsTargetLister interface.
type natsTargetLister struct {
	indexer cache.Indexer
}

// NewNatsTargetLister returns a new NatsTargetLister.
func NewNatsTargetLister(indexer cache.Indexer) NatsTargetLister {
	return &natsTargetLister{indexer: indexer}
}

// List lists all NatsTargets in the indexer.
func (s *natsTargetLister) List(selector labels.Selector) (ret []*v1alpha1.NatsTarget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatsTarget))
	})
	return ret, err
}

// NatsTargets returns an object that can list and get NatsTargets.
func (s *natsTargetLister) NatsTargets(namespace string) NatsTargetNamespaceLister {
	return natsTargetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NatsTargetNamespaceLister helps list and get NatsTargets.
// All objects returned here must be treated as read-only.
type NatsTargetNamespaceLister interface {
	// List lists all NatsTargets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NatsTarget, err error)
	// Get retrieves the NatsTarget from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NatsTarget, error)
	NatsTargetNamespaceListerExpansion
}

// natsTargetNamespaceLister implements the NatsTargetNamespaceLister
// interface.
type natsTargetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NatsTargets in the indexer for a given namespace.
func (s natsTargetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NatsTarget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatsTarget))
	})
	return ret, err
}

// Get retrieves the NatsTarget from the indexer for a given namespace and name.
func (s natsTargetNamespaceLister) Get(name string) (*v1alpha1.NatsTarget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("natstarget"), name)
	}
	return obj.(*v1alpha1.NatsTarget), nil
}
