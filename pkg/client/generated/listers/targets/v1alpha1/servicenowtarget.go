// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zeiss/typhoon/pkg/apis/targets/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceNowTargetLister helps list ServiceNowTargets.
// All objects returned here must be treated as read-only.
type ServiceNowTargetLister interface {
	// List lists all ServiceNowTargets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceNowTarget, err error)
	// ServiceNowTargets returns an object that can list and get ServiceNowTargets.
	ServiceNowTargets(namespace string) ServiceNowTargetNamespaceLister
	ServiceNowTargetListerExpansion
}

// serviceNowTargetLister implements the ServiceNowTargetLister interface.
type serviceNowTargetLister struct {
	indexer cache.Indexer
}

// NewServiceNowTargetLister returns a new ServiceNowTargetLister.
func NewServiceNowTargetLister(indexer cache.Indexer) ServiceNowTargetLister {
	return &serviceNowTargetLister{indexer: indexer}
}

// List lists all ServiceNowTargets in the indexer.
func (s *serviceNowTargetLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceNowTarget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceNowTarget))
	})
	return ret, err
}

// ServiceNowTargets returns an object that can list and get ServiceNowTargets.
func (s *serviceNowTargetLister) ServiceNowTargets(namespace string) ServiceNowTargetNamespaceLister {
	return serviceNowTargetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceNowTargetNamespaceLister helps list and get ServiceNowTargets.
// All objects returned here must be treated as read-only.
type ServiceNowTargetNamespaceLister interface {
	// List lists all ServiceNowTargets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceNowTarget, err error)
	// Get retrieves the ServiceNowTarget from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServiceNowTarget, error)
	ServiceNowTargetNamespaceListerExpansion
}

// serviceNowTargetNamespaceLister implements the ServiceNowTargetNamespaceLister
// interface.
type serviceNowTargetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceNowTargets in the indexer for a given namespace.
func (s serviceNowTargetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceNowTarget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceNowTarget))
	})
	return ret, err
}

// Get retrieves the ServiceNowTarget from the indexer for a given namespace and name.
func (s serviceNowTargetNamespaceLister) Get(name string) (*v1alpha1.ServiceNowTarget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servicenowtarget"), name)
	}
	return obj.(*v1alpha1.ServiceNowTarget), nil
}
