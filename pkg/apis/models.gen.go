// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListKeysParams defines parameters for ListKeys.
type ListKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody = Operator

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
