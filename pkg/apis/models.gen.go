// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	Code    int32   `json:"code"`
	Message string  `json:"message"`
	Ref     *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem = System

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
