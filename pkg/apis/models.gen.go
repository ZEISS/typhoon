// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAAA//9l/haIMHAAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
