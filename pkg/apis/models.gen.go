// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id              *openapi_types.UUID `json:"id,omitempty"`
	OperatorSignKey *OperatorSignKey    `json:"operatorSignKey,omitempty"`
	Password        *string             `json:"password,omitempty"`
	Url             *string             `json:"url,omitempty"`
	User            *string             `json:"user,omitempty"`
}

// OperatorSignKey defines model for OperatorSignKey.
type OperatorSignKey = string

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name string `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
