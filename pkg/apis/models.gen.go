// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// System defines model for System.
type System struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`

	// Name Name of the system
	Name string `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListTeamParams defines parameters for ListTeam.
type ListTeamParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
