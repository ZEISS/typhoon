// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"85r4Z2EV8NVUnmb+PwAA///ycDGWam4AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
