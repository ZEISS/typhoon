// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken struct {
	Token *string `json:"token,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
	OperatorId  openapi_types.UUID `json:"operatorId"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListAccounts defines model for ListAccounts.
type ListAccounts struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateOperatorSystemAccount defines model for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccount struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListAccountsJSONBody defines parameters for ListAccounts.
type ListAccountsJSONBody struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateAccountJSONBody defines parameters for CreateAccount.
type CreateAccountJSONBody struct {
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
	OperatorId  openapi_types.UUID `json:"operatorId"`
}

// ListAccountSigningKeyGroupsParams defines parameters for ListAccountSigningKeyGroups.
type ListAccountSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorSigningKeyGroupsParams defines parameters for ListOperatorSigningKeyGroups.
type ListOperatorSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateOperatorSystemAccountJSONBody defines parameters for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccountJSONBody struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// ListSystemsParams defines parameters for ListSystems.
type ListSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListAccountsJSONRequestBody defines body for ListAccounts for application/json ContentType.
type ListAccountsJSONRequestBody ListAccountsJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody CreateAccountJSONBody

// UpdateAccountJSONRequestBody defines body for UpdateAccount for application/json ContentType.
type UpdateAccountJSONRequestBody = Account

// CreateAccountSigningKeyGroupJSONRequestBody defines body for CreateAccountSigningKeyGroup for application/json ContentType.
type CreateAccountSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorSigningKeyGroupJSONRequestBody defines body for CreateOperatorSigningKeyGroup for application/json ContentType.
type CreateOperatorSigningKeyGroupJSONRequestBody = SigningKeyGroup

// UpdateOperatorSystemAccountJSONRequestBody defines body for UpdateOperatorSystemAccount for application/json ContentType.
type UpdateOperatorSystemAccountJSONRequestBody UpdateOperatorSystemAccountJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
