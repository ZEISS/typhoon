// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	Code    int32   `json:"code"`
	Message string  `json:"message"`
	Ref     *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AQAA//+qWlHVfHIAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
