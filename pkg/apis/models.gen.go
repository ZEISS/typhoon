// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time `json:"deletedAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Key         *KeyPair   `json:"key,omitempty"`
	Name        string     `json:"name"`
	SigningKeys *[]KeyPair `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"VKtGAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
