// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken struct {
	Token *string `json:"token,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
	SystemId    openapi_types.UUID `json:"systemId"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListAccounts defines model for ListAccounts.
type ListAccounts struct {
	SystemId *openapi_types.UUID `json:"systemId,omitempty"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListAccountsJSONBody defines parameters for ListAccounts.
type ListAccountsJSONBody struct {
	SystemId *openapi_types.UUID `json:"systemId,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateAccountJSONBody defines parameters for CreateAccount.
type CreateAccountJSONBody struct {
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
	SystemId    openapi_types.UUID `json:"systemId"`
}

// ListAccountSigningKeyGroupsParams defines parameters for ListAccountSigningKeyGroups.
type ListAccountSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorSigningKeyGroupsParams defines parameters for ListOperatorSigningKeyGroups.
type ListOperatorSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListSystemsParams defines parameters for ListSystems.
type ListSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListAccountsJSONRequestBody defines body for ListAccounts for application/json ContentType.
type ListAccountsJSONRequestBody ListAccountsJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody CreateAccountJSONBody

// UpdateAccountJSONRequestBody defines body for UpdateAccount for application/json ContentType.
type UpdateAccountJSONRequestBody = Account

// CreateAccountSigningKeyGroupJSONRequestBody defines body for CreateAccountSigningKeyGroup for application/json ContentType.
type CreateAccountSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorSigningKeyGroupJSONRequestBody defines body for CreateOperatorSigningKeyGroup for application/json ContentType.
type CreateOperatorSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"pOv//RSAb6cql/3/AAAA//8X7/unOWwAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
