// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`
	Team        *Team               `json:"team,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken struct {
	Token *string `json:"token,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Users defines model for Users.
type Users struct {
	Results *[]User `json:"results,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string             `json:"description,omitempty"`
	Name        string              `json:"name"`
	OperatorId  openapi_types.UUID  `json:"operatorId"`
	TeamId      *openapi_types.UUID `json:"teamId,omitempty"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateUser defines model for CreateUser.
type CreateUser struct {
	AccountId   openapi_types.UUID `json:"accountId"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// ListAccounts defines model for ListAccounts.
type ListAccounts struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListUsers defines model for ListUsers.
type ListUsers struct {
	AccountId *openapi_types.UUID `json:"accountId,omitempty"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateOperatorSystemAccount defines model for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccount struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListAccountsJSONBody defines parameters for ListAccounts.
type ListAccountsJSONBody struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateAccountJSONBody defines parameters for CreateAccount.
type CreateAccountJSONBody struct {
	Description *string             `json:"description,omitempty"`
	Name        string              `json:"name"`
	OperatorId  openapi_types.UUID  `json:"operatorId"`
	TeamId      *openapi_types.UUID `json:"teamId,omitempty"`
}

// ListAccountSigningKeyGroupsParams defines parameters for ListAccountSigningKeyGroups.
type ListAccountSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorSigningKeyGroupsParams defines parameters for ListOperatorSigningKeyGroups.
type ListOperatorSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateOperatorSystemAccountJSONBody defines parameters for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccountJSONBody struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// ListSystemsParams defines parameters for ListSystems.
type ListSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersJSONBody defines parameters for ListUsers.
type ListUsersJSONBody struct {
	AccountId *openapi_types.UUID `json:"accountId,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody struct {
	AccountId   openapi_types.UUID `json:"accountId"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// ListAccountsJSONRequestBody defines body for ListAccounts for application/json ContentType.
type ListAccountsJSONRequestBody ListAccountsJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody CreateAccountJSONBody

// UpdateAccountJSONRequestBody defines body for UpdateAccount for application/json ContentType.
type UpdateAccountJSONRequestBody = Account

// CreateAccountSigningKeyGroupJSONRequestBody defines body for CreateAccountSigningKeyGroup for application/json ContentType.
type CreateAccountSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorSigningKeyGroupJSONRequestBody defines body for CreateOperatorSigningKeyGroup for application/json ContentType.
type CreateOperatorSigningKeyGroupJSONRequestBody = SigningKeyGroup

// UpdateOperatorSystemAccountJSONRequestBody defines body for UpdateOperatorSystemAccount for application/json ContentType.
type UpdateOperatorSystemAccountJSONRequestBody UpdateOperatorSystemAccountJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// ListUsersJSONRequestBody defines body for ListUsers for application/json ContentType.
type ListUsersJSONRequestBody ListUsersJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody CreateUserJSONBody

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
