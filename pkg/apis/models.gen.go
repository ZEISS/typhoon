// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken struct {
	Token *string `json:"token,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Users defines model for Users.
type Users struct {
	Results *[]User `json:"results,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
	OperatorId  openapi_types.UUID `json:"operatorId"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateUser defines model for CreateUser.
type CreateUser struct {
	AccountId   openapi_types.UUID `json:"accountId"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// ListAccounts defines model for ListAccounts.
type ListAccounts struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListUsers defines model for ListUsers.
type ListUsers struct {
	AccountId *openapi_types.UUID `json:"accountId,omitempty"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateOperatorSystemAccount defines model for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccount struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListAccountsJSONBody defines parameters for ListAccounts.
type ListAccountsJSONBody struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateAccountJSONBody defines parameters for CreateAccount.
type CreateAccountJSONBody struct {
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
	OperatorId  openapi_types.UUID `json:"operatorId"`
}

// ListAccountSigningKeyGroupsParams defines parameters for ListAccountSigningKeyGroups.
type ListAccountSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorSigningKeyGroupsParams defines parameters for ListOperatorSigningKeyGroups.
type ListOperatorSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateOperatorSystemAccountJSONBody defines parameters for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccountJSONBody struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// ListSystemsParams defines parameters for ListSystems.
type ListSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersJSONBody defines parameters for ListUsers.
type ListUsersJSONBody struct {
	AccountId *openapi_types.UUID `json:"accountId,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody struct {
	AccountId   openapi_types.UUID `json:"accountId"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// ListAccountsJSONRequestBody defines body for ListAccounts for application/json ContentType.
type ListAccountsJSONRequestBody ListAccountsJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody CreateAccountJSONBody

// UpdateAccountJSONRequestBody defines body for UpdateAccount for application/json ContentType.
type UpdateAccountJSONRequestBody = Account

// CreateAccountSigningKeyGroupJSONRequestBody defines body for CreateAccountSigningKeyGroup for application/json ContentType.
type CreateAccountSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorSigningKeyGroupJSONRequestBody defines body for CreateOperatorSigningKeyGroup for application/json ContentType.
type CreateOperatorSigningKeyGroupJSONRequestBody = SigningKeyGroup

// UpdateOperatorSystemAccountJSONRequestBody defines body for UpdateOperatorSystemAccount for application/json ContentType.
type UpdateOperatorSystemAccountJSONRequestBody UpdateOperatorSystemAccountJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// ListUsersJSONRequestBody defines body for ListUsers for application/json ContentType.
type ListUsersJSONRequestBody ListUsersJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody CreateUserJSONBody

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"7zXj264qQv5vAAAA//+SE68sL4AAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
