// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	Code    int32   `json:"code"`
	Message string  `json:"message"`
	Ref     *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem = System

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
