// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
