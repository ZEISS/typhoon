// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	Code    int32   `json:"code"`
	Message string  `json:"message"`
	Ref     *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"j6g2jO+66hjz/wEAAP//vYWvyoJ3AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
