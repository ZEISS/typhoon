// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	OpenIdScopes     = "openId.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`
	Team        *Team               `json:"team,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken struct {
	Token *string `json:"token,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Users defines model for Users.
type Users struct {
	Results *[]User `json:"results,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// SecuritySchemes defines model for securitySchemes.
type SecuritySchemes = interface{}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string             `json:"description,omitempty"`
	Name        string              `json:"name"`
	OperatorId  openapi_types.UUID  `json:"operatorId"`
	TeamId      *openapi_types.UUID `json:"teamId,omitempty"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateUser defines model for CreateUser.
type CreateUser struct {
	AccountId   openapi_types.UUID `json:"accountId"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// ListAccounts defines model for ListAccounts.
type ListAccounts struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListUsers defines model for ListUsers.
type ListUsers struct {
	AccountId *openapi_types.UUID `json:"accountId,omitempty"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateOperatorSystemAccount defines model for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccount struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListAccountsJSONBody defines parameters for ListAccounts.
type ListAccountsJSONBody struct {
	OperatorId *openapi_types.UUID `json:"operatorId,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateAccountJSONBody defines parameters for CreateAccount.
type CreateAccountJSONBody struct {
	Description *string             `json:"description,omitempty"`
	Name        string              `json:"name"`
	OperatorId  openapi_types.UUID  `json:"operatorId"`
	TeamId      *openapi_types.UUID `json:"teamId,omitempty"`
}

// ListAccountSigningKeyGroupsParams defines parameters for ListAccountSigningKeyGroups.
type ListAccountSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorSigningKeyGroupsParams defines parameters for ListOperatorSigningKeyGroups.
type ListOperatorSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateOperatorSystemAccountJSONBody defines parameters for UpdateOperatorSystemAccount.
type UpdateOperatorSystemAccountJSONBody struct {
	AccountId openapi_types.UUID `json:"accountId"`
}

// ListSystemsParams defines parameters for ListSystems.
type ListSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersJSONBody defines parameters for ListUsers.
type ListUsersJSONBody struct {
	AccountId *openapi_types.UUID `json:"accountId,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody struct {
	AccountId   openapi_types.UUID `json:"accountId"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// ListAccountsJSONRequestBody defines body for ListAccounts for application/json ContentType.
type ListAccountsJSONRequestBody ListAccountsJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody CreateAccountJSONBody

// UpdateAccountJSONRequestBody defines body for UpdateAccount for application/json ContentType.
type UpdateAccountJSONRequestBody = Account

// CreateAccountSigningKeyGroupJSONRequestBody defines body for CreateAccountSigningKeyGroup for application/json ContentType.
type CreateAccountSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorSigningKeyGroupJSONRequestBody defines body for CreateOperatorSigningKeyGroup for application/json ContentType.
type CreateOperatorSigningKeyGroupJSONRequestBody = SigningKeyGroup

// UpdateOperatorSystemAccountJSONRequestBody defines body for UpdateOperatorSystemAccount for application/json ContentType.
type UpdateOperatorSystemAccountJSONRequestBody UpdateOperatorSystemAccountJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// ListUsersJSONRequestBody defines body for ListUsers for application/json ContentType.
type ListUsersJSONRequestBody ListUsersJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody CreateUserJSONBody

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"VgWZcqoGca9knGOKbyGyAiFOs/cO+oaru9zwQ4TnNrQ8s3sdz8ngrNqQNXLjrAFLgi578crdIFozMpdT",
	"eneGm53iIO217NWkZbZ4imL44N4D3SMalzFsNSWQvWn6uWTlzdHZGYbbAblGjyDZ+332lYnfYp5uh/47",
	"cD4z0i+PDK6JupV4XK+thv590j5qa+1Y7PNSX4XvF2gT0h0UnZpsJxQ8JhVaOdKp3rbFlLWc7hKEp8qQ",
	"HoC73cBgpduku6HbmDYwd3h/+NIIQ4bnVBZhWL96SYS0AuEse307u8vd0o3WdrbcBfCdbXAzwSE6WtIQ",
	"tsSMbGsPH8zXU3o4WJZFq+1z+22WQ7ROmreHpVNpa2S/3tR7ZvozQ51+2ZapPNr5FjgUphU0V0+d5kKa",
	"HueqO6ffDUxFvrVvYTr+HrPpx+uW9nTOhK7rvqU16vqeAzVB+nphXjfqfpTlHy4+3yHKTuIaC0LM805B",
	"Tt1bWRrl1ry35QDuwBugy730dCy2H6giKbVi42TOUKDLpdFv91nbpXHvBtqZS2MmOESXJjWELXMjUwHD",
	"B/NhzB4+jeXRavrAfnbzmSSM9LdGO92SLRNqtHMx3u9EUZHoLXHUzem+/RSRI/nyyNZqesjnbFUjDcPi",
	"Z1Hatpv/BZXH2XkslCBPhOT2pZ79iObjPMDshscRa2Gmwr6Iucy8ztoyxbb16soeQ1U+i5oyjzveKw5r",
	"GfJX9mbDnZHUTXG4cbFWC9gV5Ol9okajElmquzctn19eFKqr9PemgptlZVb3xkg7h25ntkb5U2F3ELNk",
	"ruYyrYJBoD9uo9/TOB4OYxbieMaEHP8y+mU0xAkZ3p3prWNR1HxcXQDCHArZLrUsLG2pGLIvJTzN35jo",
	"ZQ7bB8wiLe3j5XGq9uF0PKZjLJtt6hhJq6/qSNQfyXma7SPZogdXVjdZ1GBysYub5X8CAAD//9Gz+c9Q",
	"gwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
