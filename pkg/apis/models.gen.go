// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// System defines model for System.
type System struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`

	// Name Name of the system
	Name string `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `gorm:"type:uuid;default:gen_random_uuid()" json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListTeamParams defines parameters for ListTeam.
type ListTeamParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/3LzhkFSFQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
