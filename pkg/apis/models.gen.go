// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
