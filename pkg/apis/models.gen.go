// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam = Team

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUserSigningKeysParams defines parameters for ListOperatorAccountUserSigningKeys.
type ListOperatorAccountUserSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = Team

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
