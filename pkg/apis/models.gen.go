// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	Id  *openapi_types.UUID `json:"id,omitempty"`
	Url *string             `json:"url,omitempty"`
}

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	Code    int32   `json:"code"`
	Message string  `json:"message"`
	Ref     *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *float32       `json:"limit,omitempty"`
	Offset  *float32       `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *float32       `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Cluster Cluster `json:"cluster"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xdW3PbNhb+Kxh0H2mLTtKZrp7WbdqM053EUzvNziaeDEQeSWgogAVAO1qP/vsOLryT",
	"Iqm7W7/ZFC4fzh0Hh+AjDvgi5gyYknj8iGMiyAIUCPMfCQKeMHUV6n9CkIGgsaKc4TG+nQOiIeJTpOaA",
	"XEOkOBKgBIV7OMceprplTNQce5iRBeBxYUgPC/gzoQJCPFYiAQ/LYA4LoueacrEgCo9xklDdUi1j3Vkq",
	"QdkMr1YengmexN3ATLMesNLhtgMV0QVV15qEzbhYspiAkBocVbCQDlgiWAbrzwTEMsdlRsRFFCFMSRIp",
	"PH7he3hBvtFFssDj7/U/lNl/LjJslCmYgTDg+HQqoRtdCZz8SmM0gSkXgKQiQlE2088DHkUQKENiATKJ",
	"FJKg2hZhZ25eRRG334w7BkEUF93MTlv24Hdh0O1YLpdSwaIbm23XA1k24Ha4FJAeqHSrHpjcYNshSiT0",
	"4KFu1QORG2wbRCvbGaT6kYcUjMH7SQBRcGltlH4QcKbA/kniOKIB0ahHf0gN/bEwWyy0SCk3TmmFj9Wp",
	"01U8NlApX88n2+ouQ84nf0CgNPKV55C+d2K8BVTdjQTq5wWhUSPWQ6/FUf+DhG2WBa3r2RXeG6OoT0BI",
	"boGcNswPcbgTrQsiQhfmr38ImOIx/m6URzcj20uO3n68dVP9ZNsfRMbtGq3M7EBry06x2/gWYRb6NoI1",
	"zWXMmbRz/UjC36yhHAR4HQ9+FoILa4PrzsBZZfRAJGJcoXsS0fBcs+F1YieEgwKBUMc4PBEBGEwEhSkO",
	"g+qKKRCMRHasvSO7ZIi6GRHoRogHQSIEWBq94+oXnrDwqCTSbJtqFAbSB0YSNeeC/g/C44hQPr8DRBdx",
	"BAtgCo5PqAKWcxtT2gH1fAWjONBtB8b2h5eqHnEZt0A5Q9okIcJCpOgCsIfhG9FY8Bi/8F9cnPkXZy/9",
	"W/+H8Ut/7Pv/xV5uaHTPM9erIWKI4GhTrzfktNFeCiDhexYt0yCy1u0rLLu4/yssrwkVa7yFhyWdMcpm",
	"v8LS8NBsswaM68YjQpCl/j8xPuUIdO7n9zz8U5RIZcO4svRuyIZERBt7YRMNhcAUJZEszT6hjJjtam2+",
	"zKJXdS+E0giUqZcvcH336uEFSElmzdJgmN61GjNXPk7TumoBTT0Y/hZzofrL3NuPtz+bLnWpWzUDcM1r",
	"M7t0zxfFvwL7EnNJK6qZ0srD385m/Mw9TSgzI1M25T3AXulm6xQvjWe+2F+aVDOxy2n6rdKpmJxoosWV",
	"Az0sjNZL/dIq4E3z3Gqa1lX/Er39eIsMwRHV0crbm/fv0EeYINPh/DMravnbj7dNkp9andLoZnD3ix06",
	"TiYRDUaxoPfaznyFJYoJFXaO8vpdm1+tJc2Vj0go6k4OwY7dt31FbfLOTRrzzo1aC6z0D3plag6ouCg+",
	"RQS9u7y9STOdFSq2r6IY6z978GcP/sQ8eCq+DU7F5n37kyHThF4+5ZrMKNO0+c1MU5/eZsZzHtnsNc4S",
	"3Y0/FTBXWaG4IlFDpyZwN5kUvBE8iRt0+1l1mzKJVJJJBGHpAGBKIpkr7ITzCAjbQtGp/CIDHvedpV3T",
	"9SBdMl0RhBvT5ynodSPwesxCVO20ph7jxmQZcRL2aKidspxvQtRr19VGapqek42Yc5N1zkcynJFd8Fc9",
	"qXidL7ISCkcRfyhZy5ZAM7dJIbDlkB59Md4USXgaKLNkejWlm+0g17E63Wg+R028cUdQ+L98IHneNNiG",
	"ljc1peXJ35EFlOcsrRqSsweQ6uyiCQgvBM99Q4uTMr1eJsB3rULfP4JySrIy5/5XtseF79c1Mj3xed5w",
	"HG/D0RpYnHxsoKVnB/G+EcJexj896n2Oob0159YbyuEfD81JLbch/gvJ7e8gpFPiWhjbvKT7vMf6OdOG",
	"nh2r4djUwxKCRFC1vNHy74KpmLpMkylhmQMJTarTFbH85+zy+upMt8i1xPZYeXgCRIC4TJQJJe1/v5Sz",
	"dkbTzH7G/JqPMlcqtgdRaQLV2f5CZQSWMCFSUcL+9ZUoEkXkG4XzEO5zfDdpC/SaQxTVjCX+Dl0xJXiY",
	"BPrBZ/aZ3S7jOec28cgQ3ANTaCJoOAM05QIVDtekkRMJ4p4GIG0+LaIBMAn2hACYolOqLQO+jEkwh7MX",
	"534Ozj5D+pkJ5RcLIpZ4jNcgmCQ0UogzpHhsUnrp7wuQc+8ze6BqjgiK+QOIaRKhy+srA3ICJFFUP4Fv",
	"MQgKLDB1SYoqI9vplJfXV7ggVPji3LfoeAyMxBSP8cvzC7OImKi5EZERL2ZYZjZvYZ9Rzq5CPMb/plJl",
	"EY5XKtH81GyC8yajYtXfyutsXqhgXN1V6gBe+P6gs1ISRe+nrRhTN1FN9LSBrMZ6Eq/uGs5ab5IgACmn",
	"SRShFH1JPQ2gonJ9MjZ0nPPhTkNIVfcTlon+JVxQhu80TXJR04xBJIpQ3tfDisw0Y/LE753e+XLZwNhK",
	"DVexHq01WVkqWRtVRljVOHaxs9PtfJI60S2M0NI5I499KhFBDB4yGjWTaOUVNGH0mJeorKy30f64TsDX",
	"5vnmupEXwjQI+6u6n8uFq7JUC8RYnKwIdbJEV681SxqV+g2oPeH2D8LyIik8/MoKWrPAOnSjUhmI6fSq",
	"u1NWzrLy8Pf9ZinWdpTZ9AZUC4/ipIFHtmZrd2wqKffOObQ6AUkoUduSr5Hg7eo+cgds/dzhZdp4G954",
	"f00nut3uLS086rGB26kbztjf5mvTBjaeZB1+pZ/rTRe7Ww3v674LpN6b987m2Mx5k4xAg3x3psyjx+y9",
	"nwEOfRds6dbW/I2k3QUB6ftQvWOAE1iqfwhhayVe6pprlOvhmY9DvIG6Xi5yX50Y+Qu+usKBgdo9chUS",
	"Z19diURfH35TqKw4GCOfXf+QepU9u/6S5LS5f9cI6UZpCLBL7zRSeVXdAB9la/GemqNyVYIVMvZ3V0df",
	"9e6MZlZPOdxptVBxqOAlEsQgi/nBdHi2lce0lebo6tCG0kpKm4U0v/YyjYM2R2alJx1htcPe587KTrDZ",
	"tiqxNN2B1zJMHz3a16JXrVakbsIPy1bvcU8vc+/TNbRxuMstmFfZN4yiy/wcBeVXVwbwtvjSywm5Csfy",
	"gXzjgQJ1JpVw9S39+FckwWA2qjmgAvWtXbWKuy1Ts0hzADsPHHHti5FHic26uTZ473q4TevzPvT096Gb",
	"HnEO3XNubwT2sn/khWPoLpO2jyWc4GawSJIeicy/IFWyxGIbYbRayLwQ1glOefTfzB1ZepBI6x+fogVh",
	"ZAahqyiW59hrsNJpfe0TtX95ue9uzV/dmDVQMzVgDkTXZvEmrezecNeWr3VvG7V0is22alnpeo0wBQEe",
	"Paa3d/U45cpINkzbs/vBdmbE3dVknWdVewDsH4C7T6VSxctfP+rqWb5xptENVZm6xvvshq+7L27JWbo6",
	"uuC0+LQylZstwaj4Fksfk7BxwdGuTUPpTkW7hZKZnV5vJfayhiPXM2X5gFaadCrZrsiy0dlzBcLJ1out",
	"IbHWMJW+ntK6O7cvsPztK6UtGXa7N7bEH14hrRxL0ujJvBzUFVSaRhuHlOn7R3sLKO0Ea8JJHTj43d68",
	"cL/eJrHGK/+f3R3ym/NMdOIPjjF2UH1bDqiVZW5FIDIFHz3aS2d7BNJOTIZpu7vSdrin3DCEPCzN27XY",
	"kbKiwdnTu5Y8D5AeG4QdM8Lfu6YeZ2twGoJQMto9zXma4ipIQ11h+1Vwa5ZsXL2dysxz2vzpVm73dgCt",
	"RcRtZqi1HHRPN5s/7u87B0+kSrcn00bmKwvr7cIb22R/FuG5omnQrTkHNyNORnqcu9mPe6wpdeq1ybCr",
	"PIi87StPVuVYU8LsYp/TbZRQrzJyY1/gzMro0X3EpU/uvbKGEzE36VdodpfarxK5O4h/KgTxDynQXYe+",
	"a+i8Jid4wqQ+kpU6DaYW8vttfO1rmrqLujer4n6Od/6+Fdy9wpqN6npPKapJq26fSO32wJClXq/dnePc",
	"pmJ7T/aivfpzs3ilWDLdHqI8DQqcVgH62kDkZAl6SLNyRH7lAUf1nYHCDWWN2vB7djHZ3laTTtGZPz+R",
	"zHY5m13xsWkloSnrT4QAppCjcXpJ6eX1VakADsQ9mPrdwbOanlaXynR7DfcQ8VgvB9lW2H3cxFzdNh6N",
	"Ih6QaM6lGv/g/+CPSExH9xdGKRyuhq8oSkBEADKZeyqVlpL79CSdcmbK+rKb3cykGnPbMOnnITWtiHIl",
	"gshddVYYyp0yd4xkQ5raSKw4ko2Eu0ZyJTdpyeJk2YApqybsvTz9KJE61G9eYfdYgs5m2RrtcBCab6gC",
	"C+09c+aTqg3ju646xvx/AAAA//8pNNgYkHcAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
