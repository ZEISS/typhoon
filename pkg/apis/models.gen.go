// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken = string

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem = System

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListOperatorParams defines parameters for ListOperator.
type ListOperatorParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorAccountsParams defines parameters for ListOperatorAccounts.
type ListOperatorAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountJSONBody defines parameters for CreateOperatorAccount.
type CreateOperatorAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// UpdateOperatorAccountJSONBody defines parameters for UpdateOperatorAccount.
type UpdateOperatorAccountJSONBody struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// ListOperatorAccountSigningKeysParams defines parameters for ListOperatorAccountSigningKeys.
type ListOperatorAccountSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorAccountUsersParams defines parameters for ListOperatorAccountUsers.
type ListOperatorAccountUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorAccountUserJSONBody defines parameters for CreateOperatorAccountUser.
type CreateOperatorAccountUserJSONBody struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// ListOperatorSigningKeysParams defines parameters for ListOperatorSigningKeys.
type ListOperatorSigningKeysParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListGroupsParams defines parameters for ListGroups.
type ListGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorAccountJSONRequestBody defines body for CreateOperatorAccount for application/json ContentType.
type CreateOperatorAccountJSONRequestBody CreateOperatorAccountJSONBody

// UpdateOperatorAccountJSONRequestBody defines body for UpdateOperatorAccount for application/json ContentType.
type UpdateOperatorAccountJSONRequestBody UpdateOperatorAccountJSONBody

// CreateOperatorAccountUserJSONRequestBody defines body for CreateOperatorAccountUser for application/json ContentType.
type CreateOperatorAccountUserJSONRequestBody CreateOperatorAccountUserJSONBody

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody = System

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// CreateGroupJSONRequestBody defines body for CreateGroup for application/json ContentType.
type CreateGroupJSONRequestBody = SigningKeyGroup

// UpdateGroupJSONRequestBody defines body for UpdateGroup for application/json ContentType.
type UpdateGroupJSONRequestBody = SigningKeyGroup

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = User

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"1Sbx/wEAAP//2UooQVqPAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
