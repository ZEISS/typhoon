// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyScopes     = "apiKey.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Account defines model for Account.
type Account struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Delete date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`
	ServerURL   string              `json:"serverURL"`

	// UpdatedAt Update date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Clusters defines model for Clusters.
type Clusters = []Cluster

// Credentials defines model for Credentials.
type Credentials = openapi_types.File

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`

	// Ref Reference to the error
	Ref *string `json:"ref,omitempty"`
}

// JWTAccountClaims defines model for JWTAccountClaims.
type JWTAccountClaims struct {
	Exports *[]JWTExport `json:"exports,omitempty"`
}

// JWTExport defines model for JWTExport.
type JWTExport struct {
	AccountTokenPosition *uint    `json:"account_token_position,omitempty"`
	Info                 *JWTInfo `json:"info,omitempty"`
	Name                 *string  `json:"name,omitempty"`
	ResponseType         *string  `json:"response_type,omitempty"`
	Subject              *string  `json:"subject,omitempty"`
	Type                 *int     `json:"type,omitempty"`
}

// JWTInfo defines model for JWTInfo.
type JWTInfo struct {
	Description *string `json:"description,omitempty"`
	InfoUrl     *string `json:"info_url,omitempty"`
}

// JWTToken A JWT token is a JSON Web Token.
type JWTToken struct {
	Token *string `json:"token,omitempty"`
}

// KeyPair defines model for KeyPair.
type KeyPair struct {
	PrivateKey *string `json:"privateKey,omitempty"`
	PublicKey  string  `json:"publicKey"`
}

// NKey An NKey is the private key of a NATS account.
type NKey = string

// Operator defines model for Operator.
type Operator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Key         *KeyPair            `json:"key,omitempty"`
	Name        string              `json:"name"`
	SigningKeys *[]KeyPair          `json:"signingKeys,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Operators defines model for Operators.
type Operators struct {
	Results *[]Operator `json:"results,omitempty"`
}

// PaginatedResult defines model for PaginatedResult.
type PaginatedResult struct {
	Limit   *int           `json:"limit,omitempty"`
	Offset  *int           `json:"offset,omitempty"`
	Results *[]interface{} `json:"results,omitempty"`
	Total   *int           `json:"total,omitempty"`
}

// SigningKeyGroup defines model for SigningKeyGroup.
type SigningKeyGroup struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time            `json:"deletedAt,omitempty"`
	Description *string               `json:"description,omitempty"`
	Disabled    *bool                 `json:"disabled,omitempty"`
	Id          *openapi_types.UUID   `json:"id,omitempty"`
	IsScoped    *bool                 `json:"is_scoped,omitempty"`
	Name        string                `json:"name"`
	Scope       *SigningKeyGroupScope `json:"scope,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SigningKeyGroupScope defines model for SigningKeyGroupScope.
type SigningKeyGroupScope struct {
	Data          *int                           `json:"data,omitempty"`
	Payload       *int                           `json:"payload,omitempty"`
	Publish       *SigningKeyGroupScopePublish   `json:"publish,omitempty"`
	Subscribe     *SigningKeyGroupScopeSubscribe `json:"subscribe,omitempty"`
	Subscriptions *int                           `json:"subscriptions,omitempty"`
}

// SigningKeyGroupScopePublish defines model for SigningKeyGroupScopePublish.
type SigningKeyGroupScopePublish struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// SigningKeyGroupScopeSubscribe defines model for SigningKeyGroupScopeSubscribe.
type SigningKeyGroupScopeSubscribe struct {
	Allow *[]string `json:"allow,omitempty"`
	Deny  *[]string `json:"deny,omitempty"`
}

// System defines model for System.
type System struct {
	Clusters Clusters `json:"clusters"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time `json:"deletedAt,omitempty"`

	// Description A description of the system.
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`

	// Name Name of the system
	Name     string    `json:"name"`
	Operator *Operator `json:"operator,omitempty"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Systems defines model for Systems.
type Systems = []System

// Team defines model for Team.
type Team struct {
	ContactEmail *string `json:"contactEmail,omitempty"`

	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	Description *string             `json:"description,omitempty"`
	Id          *openapi_types.UUID `json:"id,omitempty"`
	Name        string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Teams defines model for Teams.
type Teams struct {
	Results *[]Team `json:"results,omitempty"`
}

// User defines model for User.
type User struct {
	// CreatedAt Creation date and time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// DeletedAt Creation date and time
	DeletedAt *time.Time          `json:"deletedAt,omitempty"`
	Email     *string             `json:"email,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Jwt       *string             `json:"jwt,omitempty"`
	Key       *string             `json:"key,omitempty"`
	Name      string              `json:"name"`

	// UpdatedAt Creation date and time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Version defines model for Version.
type Version struct {
	Date    string `json:"date"`
	Version string `json:"version"`
}

// AccountId defines model for accountId.
type AccountId = openapi_types.UUID

// GroupId defines model for groupId.
type GroupId = openapi_types.UUID

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// OperatorId defines model for operatorId.
type OperatorId = openapi_types.UUID

// SystemId defines model for systemId.
type SystemId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// UserId defines model for userId.
type UserId = openapi_types.UUID

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Duplicate defines model for Duplicate.
type Duplicate = Error

// InternalError defines model for InternalError.
type InternalError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// Unimplemented defines model for Unimplemented.
type Unimplemented = Error

// CreateAccount defines model for CreateAccount.
type CreateAccount struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// CreateOperator defines model for CreateOperator.
type CreateOperator struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// CreateOperatorAccountUser defines model for CreateOperatorAccountUser.
type CreateOperatorAccountUser struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateSystem defines model for CreateSystem.
type CreateSystem struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// CreateTeam defines model for CreateTeam.
type CreateTeam struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListAccounts defines model for ListAccounts.
type ListAccounts struct {
	SystemId *openapi_types.UUID `json:"systemId,omitempty"`
}

// UpdateAccount defines model for UpdateAccount.
type UpdateAccount struct {
	Claims      *JWTAccountClaims `json:"claims,omitempty"`
	Description *string           `json:"description,omitempty"`
	Name        string            `json:"name"`
}

// UpdateSystemOperator defines model for UpdateSystemOperator.
type UpdateSystemOperator struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListAccountsJSONBody defines parameters for ListAccounts.
type ListAccountsJSONBody struct {
	SystemId *openapi_types.UUID `json:"systemId,omitempty"`
}

// ListAccountsParams defines parameters for ListAccounts.
type ListAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateAccountJSONBody defines parameters for CreateAccount.
type CreateAccountJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListAccountSigningKeyGroupsParams defines parameters for ListAccountSigningKeyGroups.
type ListAccountSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOperatorsParams defines parameters for ListOperators.
type ListOperatorsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateOperatorJSONBody defines parameters for CreateOperator.
type CreateOperatorJSONBody struct {
	ContactEmail *string `json:"contactEmail,omitempty"`
	Description  *string `json:"description,omitempty"`
	Name         string  `json:"name"`
}

// ListOperatorSigningKeyGroupsParams defines parameters for ListOperatorSigningKeyGroups.
type ListOperatorSigningKeyGroupsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateSystemJSONBody defines parameters for CreateSystem.
type CreateSystemJSONBody struct {
	// Clusters A list of clusters the system is part of.
	Clusters []Cluster `json:"clusters"`

	// Description A description of the system.
	Description *string `json:"description,omitempty"`

	// Name Name of the system
	Name       string             `json:"name"`
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// UpdateSystemOperatorJSONBody defines parameters for UpdateSystemOperator.
type UpdateSystemOperatorJSONBody struct {
	OperatorId openapi_types.UUID `json:"operatorId"`
}

// ListTeamsParams defines parameters for ListTeams.
type ListTeamsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateTeamJSONBody defines parameters for CreateTeam.
type CreateTeamJSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// ListTeamAccountsParams defines parameters for ListTeamAccounts.
type ListTeamAccountsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListTeamSystemsParams defines parameters for ListTeamSystems.
type ListTeamSystemsParams struct {
	// Offset The number of items to skip before starting to collect the result set.
	Offset *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`

	// Limit The numbers of items to return.
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListAccountsJSONRequestBody defines body for ListAccounts for application/json ContentType.
type ListAccountsJSONRequestBody ListAccountsJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody CreateAccountJSONBody

// UpdateAccountJSONRequestBody defines body for UpdateAccount for application/json ContentType.
type UpdateAccountJSONRequestBody = Account

// CreateAccountSigningKeyGroupJSONRequestBody defines body for CreateAccountSigningKeyGroup for application/json ContentType.
type CreateAccountSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateOperatorJSONRequestBody defines body for CreateOperator for application/json ContentType.
type CreateOperatorJSONRequestBody CreateOperatorJSONBody

// UpdateOperatorJSONRequestBody defines body for UpdateOperator for application/json ContentType.
type UpdateOperatorJSONRequestBody = Operator

// CreateOperatorSigningKeyGroupJSONRequestBody defines body for CreateOperatorSigningKeyGroup for application/json ContentType.
type CreateOperatorSigningKeyGroupJSONRequestBody = SigningKeyGroup

// CreateSystemJSONRequestBody defines body for CreateSystem for application/json ContentType.
type CreateSystemJSONRequestBody CreateSystemJSONBody

// UpdateSystemJSONRequestBody defines body for UpdateSystem for application/json ContentType.
type UpdateSystemJSONRequestBody = System

// UpdateSystemOperatorJSONRequestBody defines body for UpdateSystemOperator for application/json ContentType.
type UpdateSystemOperatorJSONRequestBody UpdateSystemOperatorJSONBody

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody CreateTeamJSONBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
